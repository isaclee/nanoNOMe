#!/bin/bash

#SBATCH
#SBATCH --job-name=align
#SBATCH --nodes=1
# number of tasks (processes) per node
#SBATCH --ntasks-per-node=1
# number of cpus (threads) per task (process)
###SBATCH --cpus-per-task=24
#SBATCH --mail-type=end
#SBATCH --mail-user=ilee29@jhmi.edu
##SBATCH --time=8:0:0

# output directory should be set with -D option in sbatch command
while :
do
  case "$1" in
    -r | --reference) #reference
      ref=$2
      shift 2
      ;;
    -i | --input) #input prefix (for array job) or iput fq file
      fq=$2
      shift 2
      ;;
    -a | --aligner) #which aligner?
      aligner=$2
      shift 2
      ;;
    -o | --outdir) # directory of output - required
      outdir=$2
      shift 2
      ;;
    -e | --env ) ## flag for marcc
      slurm=$2
      shift 2
      ;;
    --samarg) ##samtools argument; optional
      samarg=$2
      shift 2
      ;;
    *) break
      ;;
  esac
done

if [ ${SLURM_ARRAY_TASK_ID} ];then
  fq=`readlink -f ${fq}.${SLURM_ARRAY_TASK_ID}.fastq.gz`
fi
fqname=$(basename "$fq")
base=${fqname%.f*q*}
outpre=${outdir}/$base
bam=${outpre}.sorted.bam

echo "starting job $SLURM_JOBID : alignment of $fq to $bam"

case "$slurm" in
  marcc)
    module load anaconda-python/3.6
    t=24
    ;;
  aws)
    export PATH="/shared/Code/anaconda3/bin:$PATH"
    t=36
    ;;
esac
samtools=samtools

case "$aligner" in
  ngmlr)
    echo "using ngmlr to align"
    args="-t $t -r ${ref} -q $fq -x ont --bam-fix"
    src=ngmlr
    ;;
  bwa)
    echo "using bwa mem to align"
    args="-t $t -x ont2d ${ref} $fq"
    src="bwa mem"
    ;;
  minimap2)
    echo "using minimap2 to align"
    refind=${ref%.*}.mmi
    if [ ! -e $refind ];then
      echo "make index first with : minimap2 -d ref.mmi ref.fa"
      exit
    fi
    args="-ax map-ont -t $t -L $refind $fq"
    src=minimap2
    ;;
esac

echo "$src $args"
$src $args | \
  $samtools view $samarg -b - | \
  $samtools sort -@ $t -T $outpre.sorting -o $bam
$samtools index $bam

## index stats
$samtools idxstats $bam > ${outpre}.idxstats.txt
awk '{ sum+= $3 }END { print "aligned =",sum,"unaligned =",$4,"fraction =",sum/(sum+$4) }' ${outpre}.idxstats.txt

echo "Finished with job $SLURM_JOBID : alignment of $fq"
