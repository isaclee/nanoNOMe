#!/bin/bash

#SBATCH
#SBATCH --job-name=bcall
#SBATCH --nodes=1
# number of tasks (processes) per node
#SBATCH --ntasks-per-node=1
# number of cpus (threads) per task (process)
###SBATCH --cpus-per-task=24
#SBATCH --output=call-%a.log
#SBATCH --error=call-%a.log

##argument parsing
while :
do
  case "$1" in
    -o | --outdir) ## working directory
      outdir=$2
      shift 2
      ;;
    -a | --args) ##albacore arguments
      albacore_args="$2"
      shift 2
      ;;
    -v | --arrayval) #str with array values to take
      arrayval=($2) 
      echo "arrayval received"
      shift 2
      ;;
    --marcc) #marcc specific parameters
      slurm="marcc"
      shift 1
      ;;
    --aws) #flg for aws
      slurm="aws"
      shift 1
      ;;
    *) break
      ;;
  esac
done

if [ "$slurm" == "marcc" ];then
  module unload git
  module unload python/2.7.10
  module load anaconda-python/3.6
  source activate isacenv
  t=24
elif [ "$slurm" == "aws" ];then
  t=36
  export PATH="/shared/Code/anaconda3/bin:$PATH"
  if ! [ -x "$(command -v read_fast5_basecaller.py)" ];then
    /shared/Code/ilee/aws/install_albacore_isac_pip.sh
  fi
fi

echo "starting basecalling batch script: $SLURM_JOBID"
rawpath=${arrayval[$(($SLURM_ARRAY_TASK_ID-1))]}
ind=$(basename "$rawpath")
callpath=${outdir}/$ind

if [ -d "${callpath}/" ]; then 
    echo "Already done this one: ${ind}"
  elif [ ! -d "${rawpath}/" ]; then
    echo "No raw dir"
  else
    echo "albacore version: `read_fast5_basecaller.py --version`"
    echo "read_fast5_basecaller.py -i ${rawpath} \
      -t $t -s ${callpath}/ --output_format fastq --disable_filtering --recursive -q 0\
      $albacore_args"
    read_fast5_basecaller.py -i ${rawpath} -t $t -s ${callpath}/ \
      --output_format fastq --disable_filtering --recursive -q 0 $albacore_args
fi

echo "Finished with job $SLURM_JOBID"

#### mpiexec by default launches number of tasks requested
