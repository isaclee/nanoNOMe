#!/usr/bin/Rscript
library(tidyverse)
library(GenomicRanges)
library(GGally)
library(bsseq)
source("../../plot/methylation_plot_utils.R")

# data
root="/dilithium/Data/Nanopore/projects/nomeseq/analysis"
datroot=file.path(root,"pooled/methylation/mfreq_all")
cell1="GM12878"
cell2="GM12878_wgs"
lowercell="gm12878"
pd=tibble(cell=c(cell1,cell1,cell2),
          type=c("cpg","gpc","cpg"),
          filepath=file.path(datroot,paste(cell,type,"methfreq.txt.gz",sep=".")))

plotdir=file.path(root,"plots/smooth")
dbname="tss"
dbname="ctcf"
if ( dbname=="tss"){
    db.fp=file.path(root,"database/hg38/hg38_genes.TSS.2000bp.bed")
    names.fp=file.path(root,"database/hg38/hg38_genes.bed")
    names=read_tsv(names.fp,col_names=c("chrom","start","end","id","score","strand","name","fxn"))
    subset=FALSE
    # plot dir
    plotpath=file.path(plotdir,"GM12878_TSS_regions.pdf")
}else if (dbname=="ctcf"){
    db.fp=file.path(root,"database/gm12878/ctcf/GM12878_ctcf.2000bp.bed")
    plotpath=file.path(plotdir,"GM12878_CTCF_regions.pdf")
}

if (!dir.exists(plotdir)) dir.create(plotdir,recursive=TRUE)
#read in tss db
db.gr=load_db(db.fp)

# read in data
dat.db=lapply(seq(dim(pd)[1]),function(i){
    tabix_mfreq(pd$filepath[i],db.fp)})

# bismark
bs.list=lapply(dat.db,function(x){
    BSseq(chr=x$chrom,
          pos=x$start,
          M=as.matrix(x$meth),
          Cov=as.matrix(x$cov))
})
bs.cpg=combineList(bs.list[which(pd$type=="cpg")])


# get methylation by region
regmeth.list=lapply(dat.db,function(x){
    getRegionMeth(x,db.gr)})

# order based on CpG
cpgind=which(pd$type=="cpg")
cpg.regmeth=regmeth.list[[cpgind]] %>%
    mutate(cov=totcov/numsites) %>%
    filter(numsites>50,
           cov<=50,cov>10) %>%
    arrange(desc(numsites),desc(cov))
#gpc.regmeth=regmeth.list[[-cpgind]]%>%
#    mutate(cov=totcov/numsites)
#gpc.regmeth=gpc.regmeth[which(gpc.regmeth$feature.index %in% cpg.regmeth$feature.index),]
db.sig=db.gr[cpg.regmeth$feature.index]
sig.bed=as.tibble(as.data.frame(db.sig))%>%
    select(-width,-regstart,-regend)%>%
    mutate(start=start-1)
bedpath=file.path(plotdir,paste0("GM12878_",dbname,"_regions.bed"))
write_tsv(sig.bed,bedpath,col_names=FALSE)

if ( TRUE ){
    # re-do the data extraction based on new subset of genes
    ovl.list=lapply(dat.db,function(x){
        findOverlaps(GRanges(x),db.sig)})
    pdf(plotpath,width=5,height=5,useDingbats=F)    
    for (i in seq_along(db.sig[1:100])){
        reg=db.sig[i]
        sub.list=lapply(seq_along(ovl.list),function(j){
            x=ovl.list[[j]]
            dat.db[[j]][queryHits(x)[which(subjectHits(x)==i)],]%>%
                mutate(calltype=pd$type[j])
        })
        dat.sub=do.call(rbind,sub.list)%>%
            select(start,cov,freq,calltype)%>%
            gather(what,value,-start,-calltype)
        g=ggplot(dat.sub,aes(x=start,y=value,color=calltype,group=calltype))+
            facet_grid(what~.,scales="free_y")+
            geom_smooth(se=F,method="loess",span=0.2)+
            geom_point(size=0.5,alpha=0.5)+
            labs(x=paste0("Distance along ",seqnames(reg)),
                 y="Methylation Frequency")+
            theme_bw()
        if(dbname=="tss"){
            genename=names[match(reg$id,names$id),]$name
            if(as.character(strand(reg))=="-"){
                gene=tibble(start=start(reg),
                            end=reg$regstart)
            }else{
                gene=tibble(start=reg$regend,
                            end=end(reg))
            }
            gene$Gene=genename
            gene$what="freq"
            g=g+
                geom_rect(inherit.aes=F,data=gene,
                          mapping=aes(xmin=start,xmax=end,
                                      ymin=0,ymax=1,fill=Gene),alpha=0.3)
        }else if (dbname=="ctcf"){
            center=tibble(center=reg$regstart)
            g=g+geom_vline(xintercept=center$center)
        }
        g=g+theme(legend.position="bottom")
        print(g)
    }
    dev.off()

}
